# Kong API Gateway Deployment Configuration
# Version: 3.5
# Purpose: Enterprise-grade API Gateway deployment with enhanced security and monitoring

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  namespace: gameday-platform
  labels:
    app: kong-gateway
    component: api-gateway
    tier: ingress
    version: "3.5"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8001"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3  # High availability with minimum 3 replicas
  selector:
    matchLabels:
      app: kong-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero-downtime updates
  template:
    metadata:
      labels:
        app: kong-gateway
        component: api-gateway
      annotations:
        checksum/config: ${KONG_CONFIG_CHECKSUM}  # Trigger pod restart on config changes
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      # Security Context for enhanced container security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      # Pod distribution and anti-affinity rules
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: kong-gateway
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - kong-gateway
              topologyKey: "kubernetes.io/hostname"

      containers:
        - name: kong
          image: kong/kong-gateway:3.5
          imagePullPolicy: IfNotPresent
          
          # Security context for the container
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE

          # Resource limits and requests
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "2000m"
              memory: "2Gi"

          # Probes for health monitoring
          livenessProbe:
            httpGet:
              path: /status
              port: 8001
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /status/ready
              port: 8001
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3

          # Environment variables
          env:
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_PROXY_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_ADMIN_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_PROXY_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_LISTEN
              value: "0.0.0.0:8001"
            - name: KONG_PROXY_LISTEN
              value: "0.0.0.0:8000, 0.0.0.0:8443 ssl http2"
            - name: KONG_SSL_CERT
              value: "/etc/kong/ssl/tls.crt"
            - name: KONG_SSL_CERT_KEY
              value: "/etc/kong/ssl/tls.key"
            - name: KONG_PLUGINS
              value: "bundled,rate-limiting,cors,prometheus"
            - name: KONG_LOG_LEVEL
              value: "notice"
            
          # Volume mounts
          volumeMounts:
            - name: kong-config
              mountPath: /etc/kong/kong.yml
              subPath: kong.yml
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/kong/ssl
              readOnly: true
            - name: tmp
              mountPath: /tmp
            - name: kong-plugin-tmp
              mountPath: /usr/local/share/lua/5.1/kong/plugins
              readOnly: true

          # Exposed ports
          ports:
            - name: proxy
              containerPort: 8000
              protocol: TCP
            - name: proxy-ssl
              containerPort: 8443
              protocol: TCP
            - name: admin
              containerPort: 8001
              protocol: TCP
            - name: metrics
              containerPort: 8001
              protocol: TCP

      # Volumes configuration
      volumes:
        - name: kong-config
          configMap:
            name: kong-config
        - name: ssl-certs
          secret:
            secretName: kong-ssl
        - name: tmp
          emptyDir: {}
        - name: kong-plugin-tmp
          emptyDir: {}

      # Service account and pull secrets
      serviceAccountName: kong-gateway
      imagePullSecrets:
        - name: registry-credentials

      # Node selection and tolerations
      nodeSelector:
        kubernetes.io/role: ingress
      tolerations:
        - key: "node-role.kubernetes.io/ingress"
          operator: "Exists"
          effect: "NoSchedule"

      # Termination grace period
      terminationGracePeriodSeconds: 60