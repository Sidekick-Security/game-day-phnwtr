# Secret configuration for Scenario Service
# Version: 1.0.0
# Last Updated: 2024-01
# Security: AES-256-GCM encryption with AWS KMS integration
# Rotation: 180 days automatic rotation policy
# Compliance: SOC2, GDPR, HIPAA compliant

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: scenario-service-secret
  namespace: gameday
  labels:
    app: scenario-service
    tier: backend
    component: ai-service
    managed-by: terraform
    environment: production
  annotations:
    kubernetes.io/created-by: gameday-platform
    secret.kubernetes.io/managed-by: aws-kms
    secret.kubernetes.io/rotation-schedule: "180d"
    secret.kubernetes.io/last-rotated: "${TIMESTAMP}"
    encryption.kubernetes.io/kms-key: "arn:aws:kms:${REGION}:${ACCOUNT_ID}:key/${KEY_ID}"
    audit.kubernetes.io/retention: "365d"
    monitoring.kubernetes.io/alerts: "unauthorized_access,rotation_failure,expiration_warning"
    backup.kubernetes.io/strategy: "encrypted_snapshot"
    compliance.kubernetes.io/frameworks: "SOC2,GDPR,HIPAA"

data:
  # Database Credentials
  DB_USERNAME: ${BASE64_DB_USERNAME}
  DB_PASSWORD: ${BASE64_DB_PASSWORD}
  
  # LLM Service Configuration
  LLM_API_KEY: ${BASE64_LLM_API_KEY}
  LLM_MODEL_VERSION: ${BASE64_LLM_MODEL_VERSION}
  LLM_ENDPOINT: ${BASE64_LLM_ENDPOINT}
  
  # Authentication Configuration
  JWT_SECRET: ${BASE64_JWT_SECRET}
  JWT_EXPIRATION: ${BASE64_JWT_EXPIRATION}
  
  # Security Configuration
  ENCRYPTION_KEY: ${BASE64_ENCRYPTION_KEY}
  API_RATE_LIMIT: ${BASE64_API_RATE_LIMIT}

---
# RBAC Configuration for Secret Access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scenario-service-secret-reader
  namespace: gameday
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["scenario-service-secret"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scenario-service-secret-binding
  namespace: gameday
subjects:
- kind: ServiceAccount
  name: scenario-service-sa
  namespace: gameday
roleRef:
  kind: Role
  name: scenario-service-secret-reader
  apiGroup: rbac.authorization.k8s.io