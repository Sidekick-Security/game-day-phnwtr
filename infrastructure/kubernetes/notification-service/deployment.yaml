# Kubernetes Deployment manifest for Notification Service
# Version: 1.0.0
# Base Image: node:20-alpine
# Purpose: Handles multi-channel messaging through Teams, Slack and other platforms
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: gameday-platform
  labels:
    app: notification-service
    component: backend
    part-of: gameday-platform
    version: 1.0.0
    managed-by: kubectl
    environment: production
  annotations:
    kubernetes.io/change-cause: "Initial deployment of notification service"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
spec:
  # High availability with 3 replicas
  replicas: 3
  # Zero-downtime updates with rolling deployment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
        version: 1.0.0
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        checksum/config: "${CONFIG_CHECKSUM}"
        checksum/secret: "${SECRET_CHECKSUM}"
    spec:
      # Pod security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      
      containers:
      - name: notification-service
        image: notification-service:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 3000
            name: http
            protocol: TCP
          - containerPort: 9090
            name: metrics
            protocol: TCP
        
        # Resource allocation and limits
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /startup
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
        
        # Configuration mounting
        envFrom:
          - configMapRef:
              name: notification-service-config
          - secretRef:
              name: notification-service-secrets
        
        # Container security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
      
      # Pod distribution strategy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - notification-service
              topologyKey: kubernetes.io/hostname
      
      # Graceful shutdown period
      terminationGracePeriodSeconds: 60