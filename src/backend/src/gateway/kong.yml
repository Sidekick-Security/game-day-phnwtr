# Kong API Gateway Configuration v3.5
# Enterprise-grade configuration with enhanced security and monitoring capabilities

_format_version: "3.0"

# Global Configuration
_transform: true

# Core Gateway Settings
proxy_access_log: /dev/stdout
proxy_error_log: /dev/stderr
admin_access_log: /dev/stdout
admin_error_log: /dev/stderr

# Listener Configuration
admin_listen:
  - "0.0.0.0:8001 ssl"
proxy_listen:
  - "0.0.0.0:8000 ssl"
  - "0.0.0.0:8443 ssl http2"

# Security Settings
trusted_ips:
  - "10.0.0.0/8"     # Internal network
  - "172.16.0.0/12"  # VPC network
  - "192.168.0.0/16" # VPN network

real_ip_header: "X-Real-IP"
real_ip_recursive: "on"

# SSL/TLS Configuration
ssl_protocols:
  - "TLSv1.2"
  - "TLSv1.3"
ssl_prefer_server_ciphers: "on"
ssl_session_tickets: "off"
ssl_session_timeout: "1d"
ssl_buffer_size: "4k"

# DNS Configuration
dns_resolver:
  nameservers:
    - "8.8.8.8"
    - "8.8.4.4"
  timeout: 2000
  retrans: 3

# Worker Configuration
nginx_worker_processes: "auto"
nginx_worker_rlimit_nofile: 65535

# Services Configuration
services:
  # Exercise Service
  - name: exercise-service
    url: http://exercise-service:3000
    protocol: http
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    retries: 5
    routes:
      - name: exercise-api
        paths:
          - "/api/v1/exercises"
        strip_path: false
        preserve_host: true
        protocols:
          - "https"
        methods:
          - "GET"
          - "POST"
          - "PUT"
          - "DELETE"
    plugins:
      - name: jwt
        config: ${jwt_auth}
      - name: rate-limiting
        config: ${rate_limiting_config.public_api}
      - name: cors
        config: ${cors_config.cors}

  # Analytics Service
  - name: analytics-service
    url: http://analytics-service:3000
    protocol: http
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    retries: 5
    routes:
      - name: analytics-api
        paths:
          - "/api/v1/analytics"
        strip_path: false
        preserve_host: true
        protocols:
          - "https"
        methods:
          - "GET"
          - "POST"
    plugins:
      - name: jwt
        config: ${jwt_auth}
      - name: rate-limiting
        config: ${rate_limiting_config.admin_api}
      - name: cors
        config: ${cors_config.cors}

# Global Plugins
plugins:
  # Security Headers
  - name: response-transformer
    config:
      add:
        headers:
          - "Strict-Transport-Security: max-age=31536000; includeSubDomains"
          - "X-Frame-Options: DENY"
          - "X-Content-Type-Options: nosniff"
          - "X-XSS-Protection: 1; mode=block"
          - "Content-Security-Policy: default-src 'self'"
          - "Referrer-Policy: strict-origin-when-cross-origin"

  # Authentication
  - name: jwt
    config: ${jwt_auth}
  - name: oauth2
    config: ${oauth2_auth}
  
  # Rate Limiting
  - name: rate-limiting
    config: ${rate_limiting_config.public_api}
  
  # CORS
  - name: cors
    config: ${cors_config.cors}

  # Request ID
  - name: correlation-id
    config:
      header_name: "X-Request-ID"
      generator: "uuid#counter"
      echo_downstream: true

  # IP Restriction
  - name: ip-restriction
    config:
      allow:
        - "10.0.0.0/8"
        - "172.16.0.0/12"
        - "192.168.0.0/16"
      deny: []

  # Logging
  - name: file-log
    config:
      path: /var/log/kong/access.log
      reopen: true
      custom_fields_by_lua:
        timestamp: "return os.date('%Y-%m-%d %H:%M:%S')"
        request_id: "return kong.request.get_header('X-Request-ID')"
        client_ip: "return kong.client.get_ip()"

# Clustering Configuration
cluster_cert: "/etc/kong/cluster.crt"
cluster_cert_key: "/etc/kong/cluster.key"
cluster_control_plane: "0.0.0.0:8005"
cluster_data_plane: "0.0.0.0:8006"

# Redis Configuration for Rate Limiting
redis_host: "redis"
redis_port: 6379
redis_timeout: 2000
redis_database: 0