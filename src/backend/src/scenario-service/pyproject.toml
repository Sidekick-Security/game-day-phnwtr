[tool.poetry]
name = "scenario-service"
version = "1.0.0"
description = "AI-driven scenario generation and validation service for GameDay Platform"
authors = ["GameDay Platform Team"]
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.100.0"
langchain = "^0.1.0"
pydantic = "^2.0.0"
uvicorn = "^0.23.0"
openai = "^1.0.0"
httpx = "^0.24.1"
tenacity = "^8.2.3"
cachetools = "^5.3.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.4.0"
flake8 = "^6.1.0"

[build-system]
requires = ["poetry-core>=1.7.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=scenario_service --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["scenario_service"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]